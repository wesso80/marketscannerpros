import React, { useState } from "react";

// MarketScanner Pro ‚Äî Dashboard UI (single-file React component)
// - Pure React + TailwindCSS classes (no external UI kit) for easy drop-in.
// - Responsive, accessible, and clean. Replace stub handlers with your logic.
// - Light/Dark mode toggle included.

export default function MarketScannerDashboard() {
  const [dark, setDark] = useState(false);
  const [watchlist, setWatchlist] = useState("Manual Entry");

  return (
    <div className={dark ? "min-h-screen bg-slate-950 text-slate-100" : "min-h-screen bg-slate-50 text-slate-900"}>
      {/* Top Bar */}
      <header className="sticky top-0 z-40 w-full border-b border-slate-200 bg-white/80 backdrop-blur dark:bg-slate-900/80 dark:border-slate-800">
        <div className="mx-auto max-w-7xl px-4 py-3 flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="h-9 w-9 rounded-xl bg-gradient-to-br from-indigo-500 to-violet-500 shadow-inner" />
            <div>
              <h1 className="text-lg font-semibold tracking-tight">MarketScanner <span className="text-indigo-600 dark:text-indigo-400">Pro</span></h1>
              <p className="text-xs text-slate-500 dark:text-slate-400">Smart signals ‚Ä¢ Multi‚Äëasset ‚Ä¢ Real‚Äëtime</p>
            </div>
          </div>
          <div className="flex items-center gap-2">
            <button
              onClick={() => setDark(!dark)}
              className="rounded-xl border border-slate-200 px-3 py-2 text-sm font-medium transition hover:bg-slate-100 dark:border-slate-700 dark:hover:bg-slate-800"
              aria-label="Toggle dark mode"
            >
              {dark ? "Light" : "Dark"} mode
            </button>
            <button className="rounded-xl bg-indigo-600 px-4 py-2 text-sm font-semibold text-white shadow hover:bg-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-400">Upgrade</button>
            <button className="rounded-xl border border-slate-200 px-3 py-2 text-sm font-medium hover:bg-slate-100 dark:border-slate-700 dark:hover:bg-slate-800">Help</button>
          </div>
        </div>
      </header>

      {/* Body */}
      <div className="mx-auto max-w-7xl p-4 lg:p-6 grid grid-cols-1 lg:grid-cols-12 gap-6">
        {/* Sidebar */}
        <aside className="lg:col-span-3">
          <nav className="space-y-3">
            <Section title="Quick Actions">
              <div className="grid grid-cols-2 gap-2">
                <Button variant="soft">Run Scanner</Button>
                <Button variant="soft">New Alert</Button>
                <Button variant="soft">Import Symbols</Button>
                <Button variant="soft">Sync Device</Button>
              </div>
            </Section>

            <Section title="Watchlists">
              <label className="block text-xs font-medium text-slate-500 mb-1">Select watchlist</label>
              <div className="flex gap-2">
                <select
                  value={watchlist}
                  onChange={(e) => setWatchlist(e.target.value)}
                  className="w-full rounded-xl border border-slate-200 bg-white px-3 py-2 text-sm dark:bg-slate-900 dark:border-slate-700"
                >
                  <option>Manual Entry</option>
                  <option>US Tech 100</option>
                  <option>ASX 200</option>
                  <option>Top Crypto</option>
                </select>
                <Button variant="ghost">Manage</Button>
              </div>
            </Section>

            <Section title="Subscription">
              <PlanBadge tier="Free" note="4 symbols / limited features" />
              <div className="mt-3">
                <Button className="w-full">Upgrade Options</Button>
              </div>
            </Section>

            <Section title="Links">
              <SimpleLink>Privacy Policy</SimpleLink>
              <SimpleLink>Changelog</SimpleLink>
              <SimpleLink>Docs & API</SimpleLink>
              <SimpleLink>Community</SimpleLink>
            </Section>
          </nav>
        </aside>

        {/* Main content */}
        <main className="lg:col-span-9 space-y-6">
          <Panel title="Equity Markets" icon={"üìà"}>
            <EmptyState
              title="No equity results yet"
              body="Run the scanner or add symbols to your watchlist to see trade ideas."
              cta="Run Scanner"
            />
          </Panel>

          <Panel title="Crypto Markets" icon={"‚Çø"}>
            <EmptyState
              title="No crypto results yet"
              body="Kick off a scan on your selected crypto watchlist."
              cta="Run Scanner"
            />
          </Panel>

          <Panel title="Scoring Methodology" icon={"üßÆ"}>
            <Disclosure summary="Show details">
              <ul className="list-disc pl-5 text-sm leading-6 text-slate-600 dark:text-slate-300">
                <li>Multi‚Äëtimeframe confluence (30m ‚Üí Weekly)</li>
                <li>EMA stack, RSI regime, MACD momentum</li>
                <li>ATR‚Äënormalized risk score & volume filter</li>
              </ul>
            </Disclosure>
          </Panel>

          <Panel title="Price Alerts" icon={"‚è∞"}>
            <div className="flex items-center justify-between">
              <label className="inline-flex items-center gap-2 text-sm">
                <input type="checkbox" className="h-4 w-4 rounded border-slate-300" />
                Auto check
              </label>
              <div className="flex gap-2">
                <Button variant="soft">Check Now</Button>
                <Button>New Alert</Button>
              </div>
            </div>
            <div className="mt-4">
              <EmptyRow text="No active alerts. Create one to get notified when price targets hit." />
            </div>
          </Panel>

          <Panel title="Advanced Technical Analysis Charts" icon={"üìä"}>
            <form className="grid grid-cols-1 md:grid-cols-4 gap-3">
              <TextField label="Enter symbol" placeholder="e.g., AAPL, BTC-USD" />
              <SelectField label="Timeframe" options={["1D","4H","1H","30m"]} />
              <SelectField label="Period" options={["3mo","6mo","1y","Max"]} />
              <MultiCheck label="Technical Indicators" options={["EMAs","RSI","MACD","Volume"]} />
              <div className="md:col-span-4 flex justify-end gap-2 pt-1">
                <Button variant="ghost">Reset</Button>
                <Button>Render Chart</Button>
              </div>
            </form>
          </Panel>
        </main>
      </div>

      {/* Footer */}
      <footer className="border-t border-slate-200 dark:border-slate-800">
        <div className="mx-auto max-w-7xl px-4 py-6 text-xs text-slate-500 dark:text-slate-400 flex flex-col sm:flex-row items-center justify-between gap-2">
          <p>¬© {new Date().getFullYear()} MarketScanner Pro. All rights reserved.</p>
          <p className="flex items-center gap-1">
            <span className="inline-flex h-2 w-2 animate-pulse rounded-full bg-emerald-500" />
            Status: Operational
          </p>
        </div>
      </footer>
    </div>
  );
}

/* ---------- Small building blocks ---------- */
function Section({ title, children }) {
  return (
    <section className="rounded-2xl border border-slate-200 bg-white p-4 shadow-sm dark:bg-slate-900 dark:border-slate-800">
      <h3 className="mb-3 text-sm font-semibold tracking-tight text-slate-700 dark:text-slate-200">{title}</h3>
      {children}
    </section>
  );
}

function Panel({ title, icon, children }) {
  return (
    <section className="rounded-2xl border border-slate-200 bg-white p-5 shadow-sm dark:bg-slate-900 dark:border-slate-800">
      <div className="mb-3 flex items-center justify-between">
        <h2 className="text-base font-semibold tracking-tight flex items-center gap-2">
          <span className="text-xl" aria-hidden>{icon}</span>
          {title}
        </h2>
        <div className="flex gap-2">
          <IconButton title="Refresh">‚Üª</IconButton>
          <IconButton title="Settings">‚öôÔ∏è</IconButton>
        </div>
      </div>
      {children}
    </section>
  );
}

function Button({ children, className = "", variant = "solid", ...props }) {
  const base =
    "inline-flex items-center justify-center rounded-xl px-3.5 py-2.5 text-sm font-semibold transition focus:outline-none focus:ring-2";
  const styles = {
    solid: "bg-indigo-600 text-white hover:bg-indigo-500 focus:ring-indigo-400",
    soft: "bg-slate-100 text-slate-900 hover:bg-slate-200 dark:bg-slate-800 dark:text-slate-100 dark:hover:bg-slate-700",
    ghost: "bg-transparent hover:bg-slate-100 dark:hover:bg-slate-800 border border-slate-200 dark:border-slate-700",
  };
  return (
    <button className={`${base} ${styles[variant]} ${className}`} {...props}>
      {children}
    </button>
  );
}

function IconButton({ children, title }) {
  return (
    <button
      title={title}
      className="h-9 w-9 rounded-xl border border-slate-200 text-lg leading-none hover:bg-slate-100 dark:border-slate-700 dark:hover:bg-slate-800"
    >
      {children}
    </button>
  );
}

function EmptyState({ title, body, cta }) {
  return (
    <div className="rounded-xl border border-dashed border-slate-300 p-5 text-sm text-slate-600 dark:border-slate-700 dark:text-slate-300">
      <div className="flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
        <div>
          <p className="font-medium text-slate-800 dark:text-slate-200">{title}</p>
          <p className="text-xs text-slate-500 dark:text-slate-400">{body}</p>
        </div>
        <div className="mt-2 sm:mt-0">
          <Button>{cta}</Button>
        </div>
      </div>
    </div>
  );
}

function EmptyRow({ text }) {
  return (
    <div className="rounded-xl border border-dashed border-slate-300 p-4 text-xs text-slate-500 dark:border-slate-700 dark:text-slate-400">
      {text}
    </div>
  );
}

function PlanBadge({ tier, note }) {
  return (
    <div className="flex items-center justify-between rounded-xl border border-slate-200 bg-gradient-to-br from-slate-50 to-white p-3 dark:from-slate-900 dark:to-slate-950 dark:border-slate-700">
      <div>
        <p className="text-sm font-semibold">{tier} Tier</p>
        <p className="text-xs text-slate-500 dark:text-slate-400">{note}</p>
      </div>
      <span className="rounded-lg bg-indigo-600 px-2.5 py-1 text-xs font-semibold text-white">Current</span>
    </div>
  );
}

function TextField({ label, placeholder }) {
  return (
    <label className="block">
      <span className="mb-1 block text-xs font-medium text-slate-500">{label}</span>
      <input
        placeholder={placeholder}
        className="w-full rounded-xl border border-slate-200 bg-white px-3 py-2 text-sm outline-none focus:ring-2 focus:ring-indigo-400 dark:bg-slate-900 dark:border-slate-700"
      />
    </label>
  );
}

function SelectField({ label, options = [] }) {
  return (
    <label className="block">
      <span className="mb-1 block text-xs font-medium text-slate-500">{label}</span>
      <select className="w-full rounded-xl border border-slate-200 bg-white px-3 py-2 text-sm dark:bg-slate-900 dark:border-slate-700">
        {options.map((opt) => (
          <option key={opt}>{opt}</option>
        ))}
      </select>
    </label>
  );
}

function MultiCheck({ label, options = [] }) {
  return (
    <fieldset className="rounded-xl border border-slate-200 p-3 dark:border-slate-700">
      <legend className="px-1 text-xs font-medium text-slate-500">{label}</legend>
      <div className="grid grid-cols-2 gap-2">
        {options.map((o) => (
          <label key={o} className="inline-flex items-center gap-2 text-sm">
            <input type="checkbox" className="h-4 w-4 rounded border-slate-300" />
            {o}
          </label>
        ))}
      </div>
    </fieldset>
  );
}

function SimpleLink({ children }) {
  return (
    <a href="#" className="block rounded-lg px-2 py-1.5 text-sm text-indigo-700 hover:bg-indigo-50 dark:text-indigo-300 dark:hover:bg-slate-800">
      {children}
    </a>
  );
}

function Disclosure({ summary, children }) {
  return (
    <details className="rounded-xl border border-slate-200 p-3 open:bg-slate-50 dark:border-slate-700 dark:open:bg-slate-900">
      <summary className="cursor-pointer select-none text-sm font-medium">{summary}</summary>
      <div className="mt-2">{children}</div>
    </details>
  );
}
